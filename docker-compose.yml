version: '3.8'

services:
  db:
    image: postgres:16-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=hoffmagic
      - POSTGRES_PASSWORD=hoffmagic
      - POSTGRES_DB=hoffmagic
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hoffmagic"]
      interval: 5s
      timeout: 5s
      retries: 5

  web:
    # Image built by 'just build-docker'
    image: hoffmagic:latest
    volumes:
      # Mount source files needed at runtime into the container's working dir
      - ./src/content:/app/content                 # Blog content
      - ./src/hoffmagic/templates:/app/templates   # Jinja templates
      - ./src/hoffmagic/static:/app/static         # Static files (CSS, etc.)
      - ./alembic.ini:/app/alembic.ini             # Alembic configuration
      - ./src/hoffmagic/db/migrations:/app/migrations # Alembic migration scripts
    environment:
      - DATABASE_URL=postgresql+psycopg://hoffmagic:hoffmagic@db:5432/hoffmagic
      # !!! CHANGE IN PRODUCTION !!! Use secrets management.
      - SECRET_KEY=${SECRET_KEY:-dev_secret_key_change_in_production}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-'["localhost", "127.0.0.1"]'}
      - DEBUG=${DEBUG:-true} # Default to true for compose, override for prod
      - ENV=${ENV:-development}

    ports:
      - "8000:8000"

    depends_on:
      db:
        condition: service_healthy
    # No command needed - uses ENTRYPOINT defined in the Nix-built image

volumes:
  postgres_data:
